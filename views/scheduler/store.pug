script.
  const store = new Vuex.Store({
    state: {
      days: [],
      shows: [],
    },
    getters: {
      getDays: (state)=> {
        return state.days
      },
      getAllShows: (state)=> {
        return state.shows
      },
      getShows: (state)=> (day, venue)=> {
        return state.shows.filter(show=> (show.day === day && show.venue === venue))
      }
    },
    mutations: {
      initializeShows: (state, payload)=> {
        state.shows = payload
        state.shows.sort((a,b)=> a.time - b.time)
      },
      initializeVenues: (state, payload)=> {
        state.days = payload
        state.days.sort((a,b)=> { return (a.order - b.order) })
        for(let i=0; i<state.days; i++)
          state.days[i].venues.sort()
      },
      addVenue: (state, payload)=> {
        let i = state.days.findIndex(day=> day.name === payload.day)
        state.days[i].venues.push(payload.venue)
        state.days[i].venues.sort()
      },
      removeVenue: (state, payload)=> {
        let i = state.days.findIndex(day=> day.name === payload.day)
        let j = state.days[i].venues.findIndex(venue=> venue === payload.venue)
        state.days[i].venues.splice(j, 1)
      },
      addShow: (state, payload)=> {
        state.shows.push({
          __v: payload.__v,
          _id: payload._id,
          day: payload.day, 
          venue: payload.venue, 
          time: payload.time, 
          acts: []})
        state.shows.sort((a,b)=> a.time - b.time)
      },
      removeShow: (state, payload)=> {
        let showIndex = state.shows.findIndex(show=> (show._id === payload))
        state.shows.splice(showIndex, 1)
      },
      addAct: (state, payload)=> {
        let i = state.shows.findIndex(show=> (
          show.day===payload.day && 
          show.venue===payload.venue && 
          show.time===payload.time))
        state.shows[i].acts.push({domain: payload.domain, type: payload.type})
      },
      removeAct: (state, payload)=> {
        let i = state.shows.findIndex(show=> (
          show.day===payload.day &&
          show.venue===payload.venue &&
          show.time===payload.time))
        let j = state.shows[i].acts.findIndex(act=> act.name === payload.name)
        state.shows[i].acts.splice(j, 1)
      }
    }
  })