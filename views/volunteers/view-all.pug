extends ../_layout
block content
  header.dash-titlebar
    .mb-md-0.mb-3
      span.dash-titlebar-title Volunteers

  #app.dash-boxes.container-fluid

    ul
      li(v-for="volunteer in volunteers")
        pre {{volunteer}}

    ul.nav.nav-pills
      li.nav-item
        a.nav-link.active(data-toggle="tab" href="#show") All
      li.nav-item
        a.nav-link(data-toggle="tab" href="#driver") Drivers
    .tab-content.mt-3

      #show.tab-pane.fade.show.active
        p(v-if="showVolunteers.length == 0") No show volunteers yet
        .box.box-b(v-else)
          table.table.box-table
            thead
              tr
                th Name
                th Type
                th Scheduled
                th Remaining
                th Phone
                th Email
            tbody
              tr(v-for="showVolunteer in showVolunteers")
                td {{showVolunteer.name}}
                td {{showVolunteer.type}}
                td 0
                td {{showVolunteer.hours}}
                td {{showVolunteer.phone}}
                td {{showVolunteer.email}}

      #driver.tab-pane.fade
        p(v-if="driverVolunteers.length == 0") No driver volunteers yet
        .box.box-b(v-else)
          table.table.box-table
            thead
              tr
                th Name
                th Email
                th Phone
                th Passengers
            tbody
              tr(v-for="driverVolunteer in driverVolunteers")
                td {{driverVolunteer.name}}
                td {{driverVolunteer.email}}
                td {{driverVolunteer.phone}}
                td {{driverVolunteer.passengerCount}}

  script(src="/js/axios.min.js")
  script(src="/js/vue.js")
  script(src="/js/vue-markdown.js")
  script.
    let app = new Vue({ 
      el: "#app",
      data() { 
        return {
          volunteers: []
        }
      },
      computed: {
        showVolunteers() {
          return this.volunteers
        },
        driverVolunteers() {
          return this.volunteers.filter(v=> v.type.includes('driver'))
        }
      },
      methods: {
        remove(id) {
          let self = this
          axios
            .delete('/api/volunteers/' + id)
            .then(function(response) {
              alert("DONE!")
            })
            .catch(function(error) {
              alert("ERROR")
              console.log(error)
            })
        }
      },
      created() {
        let self = this
        axios
          .get('/api/volunteers')
          .then(function(response) {
            self.volunteers = response.data
          })
          .catch(function(error) {
            alert("Error getting volunteers :(")
            console.log(error)
          })
      }
    })