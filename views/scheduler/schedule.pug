extends ../_layout
block content
	#vue-app.dash-boxes.container-fluid
		.row
			.col
				a(@click.prevent="toggleFullscreen" href="#") Toggle Navigation
				day(v-for="(days, key) in schedule" ,:name="days.name" ,:venues="days.venues" ,:key="key")

	script(src="/js/axios.min.js")
	script(src="/js/vue.js")
	script(src="/js/vuex.js")

	///////////////////////////////////////////////////////////////////////////////////////////////
	// DAY ///////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////
	script#day-template(type="text/x-template")
		.box.box-b
			.box-head.box-bb.p-2.wednesday
				h4.mb-0 {{name}}
				small 
					a(@click.prevent="stub" href="#") Add Venue

			table.table.box-table.schedule
				thead
					tr
						venue(v-for="(venue, key) in venues" ,:name="venue.name" ,:key="key")
				tbody
					tr
						td.shows(v-for="venue in venues")
							show(v-for="(show, key) in venue.shows" 
								:time="show.time" 
								:host="show.host" 
								:acts="show.acts" 
								:key="key")

	script.
		Vue.component('day', {
			template: '#day-template',
			props: ['name', 'venues']
		})

	///////////////////////////////////////////////////////////////////////////////////////////////
	// VENUE /////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////
	script#venue-template(type="text/template")
		th.text-center
			img(:alt="name" width="50px" height="auto")
			p.mb-0
				small
					a(@click.prevent="stub" href="#") Remove Venue

	script.
		Vue.component('venue', {
			template: '#venue-template',
			props: ['name', 'image']
		})


	///////////////////////////////////////////////////////////////////////////////////////////////
	// SHOW //////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////
	script#show-template(type="text/template")
		.slot.time-slot
			p.mb-0.time.wednesday {{time}}
				small.float-right
					a(@click.prevent="stub" href="#") remove show
			.row.no-gutters.justify-content-between.host-slot(v-if="host")
				.col-xs-6
					em Host: {{host}}
				.col-xs-6
					small
						a(@click.prevent="stub" href="#") remove host
			.row.no-gutters.justify-content-between.host-slot(v-else)
				.col-xs-6
					em No Host
				.col-xs-6
					small
						a(@click.prevent="stub" href="#") add host
			act(v-for="(act, key) in acts" ,:key="key" ,:name="act.name" ,:type="act.type")
			small.d-block.text-right
				a(@click.prevent="addAct" href="#") + add act


	script.
		Vue.component('show', {
			template: '#show-template',
			props: {
				time: {
					type: String,
					required: true
				},
				host: {
					type: String,
					default: null
				},
				acts: {
					type: Array,
					default() {return []}
				}
			},
			methods: {
				addAct() {
					this.$emit('addAct')
				}
			}
		})

	////////////////////////////////////////////////////////////////////////////////////////////////
	// ACT ////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////
	script#act-template(type="text/template")
		.row.no-gutters.justify-content-between.act-slot
			.col-xs-6
				strong 
					a(@click.prevent="stub" href="#") {{name}}
				| &nbsp;
				em.badge {{type}}
			.col-xs-6
				small
					a(@click.prevent="stub" href="#").float-right remove act

	script.
		Vue.component('act', {
			template: '#act-template',
			props: ['name', 'type']
		})



	script.

		const store = new Vuex.Store({
			state: {
				schedule: [
					{name: 'Tuesday', venues: [
						{name: 'Hideout', shows: [
							{time: '7pm', host: 'Dave Buckman', acts: [
								{name: 'Frank Mills', type:'Improv'},
								{name: 'Physics Curse', type: 'Sketch'}
							]},
							{time: '10pm', host: 'Asaf Ronen', acts: [
								{name: 'Channel 2', type:'Improv'},
								{name: 'Katie Stone', type:'Stand-Up'}]}
						]},
					 	{name: 'ColdTowne', shows: []},
						{name: 'Fallout', shows: [
							{time: '7:30pm', acts: []},
							{time: '11pm', host: 'Asaf Ronen', acts: []}
						]}
					]},
					{name: 'Wednesday', venues: [
						{name: 'Hideout', shows: [
							{time: '10:30pm'}]
						}
					]}
				]
			},
			mutations: {
				addAct(state, day, venue, show) {

				}
			}
		})


		new Vue({ 
			el: "#vue-app",
			data() { 
				return {
					isFullscreen: false,
					schedule: store.state.schedule
				}
			},
			methods: {
				toggleFullscreen() {
					if(this.isFullscreen) {
						document.getElementById("dash-nav").style.display = 'flex';
						document.getElementsByTagName("main")[0].style["margin-left"] = '206px'
						document.getElementsByClassName('dash-toolbar')[0].style.left = '206px'
					}
					else {
						document.getElementById("dash-nav").style.display = 'none';
						document.getElementsByTagName("main")[0].style["margin-left"] = 0
						document.getElementsByClassName('dash-toolbar')[0].style.left = 0
					}
					this.isFullscreen = !this.isFullscreen
				},
				stub() {
					alert("Clicky!")
				}
			},
			mounted() {
				let self = this
				self.toggleFullscreen()
			}
		})