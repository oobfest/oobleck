#demographics.tab-pane.fade
	.mt-3
	script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js")
	
	.row
		.col-md-4
			.card
				h4.card-header.text-center Show Types
				.card-body
					canvas#show-types(width="400" height="400")
		.col-md-8
			.card
				h4.card-header.text-center Theaters
				.card-body
					.form-check
						input#filter-theaters.form-check-input(type="checkbox" autocomplete="off")
						label.form-check-label(for="filter-theaters" onclick="condenseTheaters()") Only show for 2+ entries
					canvas#theaters(width="800" height="400")
	.row.mt-3
		.col-md-8
			.card
				h4.card-header.text-center Submissions by City
				.card-body
					.form-check
						input#filter-hometowns.form-check-input(type="checkbox" autocomplete="off")
						label.form-check-label(for="filter-hometowns" onclick="condenseHometowns()") Only show for 2+ entries
					canvas#hometowns

	script.
		Chart.defaults.global.defaultFontSize = 16
		var COLORS = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D','#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC','#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399','#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933','#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF']

		// SHOW TYPES
		var showTypesChart = new Chart(document.getElementById('show-types').getContext('2d'), {
			type: 'pie',
			data: {
				labels: ["Improv", "Sketch", "Stand-Up", "Variety", "Podcast", "Performer", "Music", "Other"],
				datasets: [{
					backgroundColor: ['#5DA5DA','#FAA43A','#60BD68','#F17CB0','#B2912F','#B276B2','#DECF3F','#F15854','#4D4D4D'],
					borderColor: 'white',
					data: [
						#{demographics.improv},
						#{demographics.sketch},
						#{demographics.standup},
						#{demographics.variety},
						#{demographics.podcast},
						#{demographics.performer},
						#{demographics.other}
					],
				}]
			}
		})

		// HOME TOWNS
		var hometownNames = !{JSON.stringify(Object.values(hometownNames)).replace(/<\//g, '<\\/')}
		var hometownCounts = !{JSON.stringify(Object.values(hometownCounts)).replace(/<\//g, '<\\/')}
		var hometownNamesCondensed = !{JSON.stringify(Object.values(filteredHometownNames)).replace(/<\//g, '<\\/')}
		var hometownCountsCondensed = !{JSON.stringify(Object.values(filteredHometownCounts)).replace(/<\//g, '<\\/')}
		var hometownChart = new Chart(document.getElementById('hometowns').getContext('2d'), {
			type: 'horizontalBar',
			data: {
				labels: hometownNames,
				datasets: [{ 
					label: "Submissions",
					backgroundColor: '#5DA5DA',
					data: hometownCounts
				}]
			},
			options: {
				legend: { display: false},
				scales: { xAxes: [{ ticks: { beginAtZero: true }}]}
			}
		})
		var condensedHometowns = false
		function condenseHometowns() {
			if(condensedHometowns) {
				hometownChart.data.labels = hometownNames
				hometownChart.data.datasets[0].data = hometownCounts
			}
			else {
				hometownChart.data.labels = hometownNamesCondensed
				hometownChart.data.datasets[0].data = hometownCountsCondensed
			}

			hometownChart.update()
			condensedHometowns = !condensedHometowns
		}


		// THEATERS
		var theaterNames = !{JSON.stringify(Object.keys(theaters))}
		var theaterCounts = !{JSON.stringify(Object.values(theaters))}
		var theaterChart = new Chart(document.getElementById('theaters').getContext('2d'), {
			type: 'pie',
			data: {
				labels: theaterNames,
				datasets: [{
					backgroundColor: COLORS,
					borderColor: 'white',
					data: theaterCounts
				}]
			},
			options: { legend: { position: 'left'}}
		})

		var condensedTheaters = false
		var theaterNamesCondensed = !{JSON.stringify(Object.keys(theatersFiltered))}
		var theaterCountsCondensed = !{JSON.stringify(Object.values(theatersFiltered))}
		function condenseTheaters() {
			if(condensedTheaters) {
				theaterChart.data.labels = theaterNames
				theaterChart.data.datasets[0].data = theaterCounts
			}
			else {
				theaterChart.data.labels = theaterNamesCondensed
				theaterChart.data.datasets[0].data = theaterCountsCondensed
			}

			theaterChart.update()
			condensedTheaters = !condensedTheaters
		}