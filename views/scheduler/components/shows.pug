script#shows-template(type="text/template")
	.shows
		.show(v-for="show in shows")
			.slot.time-slot
				p.mb-0.time.highlight 
					span.code {{show.time | time}}
					small.float-right(v-show="$root.show")
						a(@click.prevent="removeShow(show.time)" href="#") - remove show
				.row.no-gutters.justify-content-between.host-slot(v-if="show.host")
					.col-xs-6
						em Host: {{show.host}}
					.col-xs-6
						small(v-show="$root.show")
							a(@click.prevent="stub" href="#") remove host
				//.row.no-gutters.justify-content-between.host-slot(v-else)
					.col-xs-6
						em No Host
					.col-xs-6
						small(v-show="$root.show")
							a(@click.prevent="stub" href="#") + add host
				act(v-if="$root.submissions" v-for="(act, key) in show.acts" ,:key="key" ,:domain="act.domain" ,:type="act.type" ,:time="show.time")
				.d-block.text-right
					small(v-show="$root.show")
						a(@click.prevent="addActModal(show.time)" href="#" data-toggle="modal" data-target="#add-act-modal") + add act


script.
	Vue.component('shows', {
		template: '#shows-template',
		props: ['day', 'venue'],
		computed: {
			shows() {
				return store.getters.getShows(this.day, this.venue)
			}
		},
		methods: {
			addActModal(time) {
				this.$parent.$emit('add-act-modal', {day:this.day, venue:this.venue, time})
			},
			removeShow(time) {
				time = time.toString()
				if (confirm("Remove " + time.slice(0, time.length-2) + ":" + time.slice(time.length-2) + "pm" + " show?")) {
					store.commit('removeShow', {day:this.day, venue:this.venue, time})
				}
			}
		},
		filters: {
			time(time) {
				time = time.toString()
				return time.slice(0, time.length-2) + ":" + time.slice(time.length-2) + "pm"
			}
		}
	})